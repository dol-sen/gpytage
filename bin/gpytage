#!/usr/bin/env python
#
# GPytage is released under the GPLv2 License
# GTK Utility to help manage Portage's user config files
#
############################################################################
#   Copyright (C) 2008-2011 by Kenneth Prugh                               #
#   ken69267@gmail.com                                                     #
#                                                                          #
#   This program is free software; you can redistribute it and#or modify   #
#   it under the terms of the GNU General Public License as published by   #
#   the Free Software Foundation under version 2 of the license.           #
#                                                                          #
#   This program is distributed in the hope that it will be useful,        #
#   but WITHOUT ANY WARRANTY; without even the implied warranty of         #
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          #
#   GNU General Public License for more details.                           #
#                                                                          #
#   You should have received a copy of the GNU General Public License      #
#   along with this program; if not, write to the                          #
#   Free Software Foundation, Inc.,                                        #
#   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.              #
############################################################################

import pygtk; pygtk.require("2.0")
import os.path
import sys
from getopt import getopt, GetoptError

def usage():
    tabs = "\t\t"
    print("Usage: gpytage [OPTION...]\n")
    print("  -h, --help" + tabs + "Show this help message")
    print("  -l, --local" + tabs + \
          "Run a local version (use modules in current directory)")
    print("  -v, --version" + tabs + "Output version information and exit")
    print("  -t, --test" + tabs + \
          "Specify a portage test configuration's location")


if __name__ == "__main__":
    try:
        opts, args = getopt(sys.argv[1:], 'lvht:', ["local", "version", 
                        "help", "test="])
    except GetoptError as e:
        print(e.msg, file=sys.stderr)
        usage()
        sys.exit(1)

    RUN_LOCAL = False
    TEST = False
    TEST_PATH = None

    for opt, arg in opts:
        if opt in ("-h", "--help"):
            usage()
            sys.exit()
        if opt in ("-l", "--local"):
            # running a local version (i.e. not installed in /usr/*)
            DATA_PATH = (os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

            print("DATA_PATH =", DATA_PATH)
            sys.path.insert(0, DATA_PATH)

            RUN_LOCAL = True

            print("GPytage: starting local gpytage()")

    for opt, arg in opts: 
        if opt in ("-t", "--test"):
            TEST = True
            TEST_PATH = arg
    
    for opt, arg in opts:
        #print "opt, arg ", opt, arg, type(arg)
        if opt in ("-v", "--version"):
            # print version info
            from gpytage.config import VERSION
            print("GPytage " + VERSION)
            sys.exit(0)
    
    from gpytage.main import GPytage
    from gpytage.config import Config
    c = Config()
    if (RUN_LOCAL):
        c.setPixPath(DATA_PATH + "/share/pixmaps/gpytage/")
    if (TEST):
        c.portconf = TEST_PATH
        print("PORTCONF: " + c.portconf)
    launch = GPytage(c)
